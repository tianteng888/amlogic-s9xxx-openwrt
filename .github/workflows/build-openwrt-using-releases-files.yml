#=====================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Build OpenWrt for s905l3a using ImmortalWrt 24.10.2 with opkg
#=====================================================================================

name: Build ImmortalWrt 24.10.2 (opkg) for s905l3a

# 触发条件：手动触发或仓库事件触发
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_board:
        description: "设备型号"
        required: true
        default: "s905l3a"
        type: choice
        options:
          - s905l3a
          - s905l3a-cm311
          - s905l3a-m401a
      openwrt_kernel:
        description: "内核版本（推荐最新）"
        required: true
        default: "6.12.y"
        type: choice
        options:
          - 6.12.y  # 最新内核
          - 6.6.y
          - 6.1.y
      auto_kernel:
        description: "自动使用最新内核"
        required: false
        default: true
        type: boolean

env:
  TZ: Asia/Shanghai  # 调整时区为国内，避免时间同步问题
  IMMORTALWRT_VERSION: "24.10.2"
  TARGET_URL: "https://downloads.immortalwrt.org/releases/${{ env.IMMORTALWRT_VERSION }}/targets/armsr/armv8/"
  PACKAGES_URL: "https://downloads.immortalwrt.org/releases/${{ env.IMMORTALWRT_VERSION }}/packages/aarch64_generic/"
  # 明确s905l3a的rootfs文件名（根据官方源实际文件名调整，这里是示例）
  ROOTFS_PATTERN: "openwrt-${{ env.IMMORTALWRT_VERSION }}-armsr-armv8-generic-s905l3a-*-rootfs.tar.gz"

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch'  # 确保触发条件正确

    steps:
      - name: 检查代码仓库
        uses: actions/checkout@v4

      - name: 初始化环境（修复依赖和权限）
        id: init
        run: |
          # 清理冗余资源，释放空间
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/hostedtoolcache/*
          sudo swapoff -a && sudo rm -f /swapfile
          
          # 安装必要工具（确保opkg依赖完整）
          sudo apt-get update -y
          sudo apt-get install -y curl wget tar xz-utils binutils rsync unzip file
          
          # 验证网络连通性（确保能访问官方源）
          if ! curl -sSL --head ${{ env.TARGET_URL }} > /dev/null; then
            echo "错误：无法访问ImmortalWrt官方源，请检查网络"
            exit 1
          fi
          
          echo "status=success" >> $GITHUB_OUTPUT

      - name: 创建临时存储（避免空间不足）
        if: steps.init.outputs.status == 'success'
        run: |
          sudo mkdir -p /builder && sudo chmod 777 /builder
          df -h /builder

      - name: 下载ImmortalWrt 24.10.2 rootfs（确保文件存在）
        id: download_rootfs
        if: steps.init.outputs.status == 'success'
        working-directory: /builder
        run: |
          echo "开始从官方源下载rootfs: ${{ env.TARGET_URL }}"
          # 从官方源列表中精确匹配s905l3a的rootfs
          rootfs_file=$(curl -s ${{ env.TARGET_URL }} | grep -oE "${{ env.ROOTFS_PATTERN }}" | head -n 1)
          if [ -z "$rootfs_file" ]; then
            echo "错误：未找到s905l3a的rootfs文件，检查URL或文件名格式"
            exit 1
          fi
          
          # 下载文件并验证
          wget -c ${{ env.TARGET_URL }}/$rootfs_file -O openwrt-rootfs.tar.gz
          if [ ! -f "openwrt-rootfs.tar.gz" ] || [ $(du -b "openwrt-rootfs.tar.gz" | cut -f1) -lt 10485760 ]; then
            echo "错误：rootfs下载失败或文件不完整"
            exit 1
          fi
          
          echo "rootfs_path=/builder/openwrt-rootfs.tar.gz" >> $GITHUB_OUTPUT
          echo "status=success" >> $GITHUB_OUTPUT

      - name: 配置opkg环境（直接集成到rootfs）
        if: steps.download_rootfs.outputs.status == 'success'
        working-directory: /builder
        run: |
          # 创建临时目录解压rootfs
          mkdir -p temp_rootfs
          tar -zxf openwrt-rootfs.tar.gz -C temp_rootfs
          
          # 下载并安装opkg（从官方packages源）
          opkg_ipk=$(curl -s ${{ env.PACKAGES_URL }}/base/ | grep -oE "opkg_[0-9]+\.[0-9]+\-.*_aarch64_generic.ipk" | head -n 1)
          wget -c ${{ env.PACKAGES_URL }}/base/$opkg_ipk -O opkg.ipk
          ar x opkg.ipk data.tar.xz
          tar -xJf data.tar.xz -C temp_rootfs
          
          # 写入opkg源配置
          mkdir -p temp_rootfs/etc/opkg
          cat << EOF > temp_rootfs/etc/opkg/distfeeds.conf
          src/gz immortalwrt_core ${{ env.TARGET_URL }}/packages
          src/gz immortalwrt_base ${{ env.PACKAGES_URL }}/base
          src/gz immortalwrt_luci ${{ env.PACKAGES_URL }}/luci
          src/gz immortalwrt_packages ${{ env.PACKAGES_URL }}/packages
          EOF
          
          # 重新打包rootfs
          rm -f openwrt-rootfs.tar.gz
          tar -zcf openwrt-rootfs.tar.gz -C temp_rootfs .
          rm -rf temp_rootfs

      - name: 打包OpenWrt镜像（调用官方工具）
        id: package
        if: steps.download_rootfs.outputs.status == 'success'
        uses: ophub/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: ${{ steps.download_rootfs.outputs.rootfs_path }}  # 确保路径正确
          openwrt_board: ${{ inputs.openwrt_board }}
          openwrt_kernel: ${{ inputs.openwrt_kernel }}
          auto_kernel: ${{ inputs.auto_kernel }}
          kernel_repo: "ophub/kernel"
          kernel_usage: "stable"

      - name: 上传构建结果
        if: steps.package.outputs.status == 'success'
        uses: ncipollo/release-action@main
        with:
          tag: "ImmortalWrt_24.10.2_${{ inputs.openwrt_board }}_$(date +%Y%m%d)"
          artifacts: "${{ env.PACKAGED_OUTPUTPATH }}/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### 设备：${{ inputs.openwrt_board }}
            ### 内核：${{ inputs.openwrt_kernel }}
            ### 包管理器：opkg
            ### 官方源：
            - [targets](${{ env.TARGET_URL }})
            - [packages](${{ env.PACKAGES_URL }})
